@page "/parents"
@using BlazorApp.Models
@using BlazorApp.Services
@using System.Text.Json
@using Newtonsoft.Json
@inject ParentService ParentService;
<h1>Parent List</h1>


<div class="bg-white rounded mt-6 border border-bottom-0">

	<div class="d-flex justify-content-end gap-1 p-1 mt-4">
		<a class="btn btn-primary" href="/parents/create">Add Parent</a>
		<button class="btn btn-primary">Save List</button>
	</div>

	<div class="d-flex justify-content-between mt-2 border p-1">
		<h6>Parent/Guardian List</h6>
		<div>
			<div class="input-group">
				<input type="search" name="search" placeholder="search" /><span class="bi bi-search input-group-text"></span>

			</div>

		</div>
	</div>

	<table class="table table-striped table-hover border p-1">
		<thead>
			<tr>
				<th class="text-primary">First Name</th>
				<th class="text-primary">Last Name</th>
				<th class="text-primary">Username</th>
				<th class="text-primary">Home Address</th>
				<th class="text-primary">Phone1</th>
				<th class="text-primary">Work Phone</th>
				<th class="text-primary">Home Phone</th>
				<th class="text-primary">Children Count</th>
				<th>Actions</th>

			</tr>
		</thead>
		<tbody>
			@if(parents.Count > 0)
			{
				@foreach (var parent in parents)
				{
					<tr>
						<td>@parent.FirstName</td>
						<td>@parent.LastName</td>
						<td>@parent.Username</td>
						<td>@parent.HomeAddress</td>
						<td>@parent.Phone1</td>
						<td>@parent.WorkPhone</td>
						<td>@parent.HomePhone</td>
						<td>@parent.children</td>
						<td><a class="bi bi-layout-text-sidebar-reverse text-primary" href="/parents/details/@parent.Id"></a> <a class="bi bi-pencil text-primary" href="/parents/edit/@parent.Id"></a> <a class="bi bi-trash text-primary" href="/parents/delete/@parent.Id"></a></td>
						@* <td>@student.FirstName</td> *@

					</tr>
				}
				
			}
		</tbody>
	</table>
</div>

@code {

	private List<ParentModel> parents = new List<ParentModel>();
	private int page = 1;
	private int pageSize = 10;

	protected override async Task OnInitializedAsync()
	{
		var response = await ParentService.GetAllparents(page, pageSize);
		parents = JsonConvert.DeserializeObject<List<ParentModel>>(response.data.ToString());
	}

}
